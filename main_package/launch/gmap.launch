<launch>
  
  <!--Urdf file path-->
  <param name="robot_description" textfile="$(find urdf12)/urdf/urdf12.urdf"/>
  
  
  <node pkg="tf" type="static_transform_publisher" name="lidar_to_laser" args="0 0 0 0 0 0 lidar laser 40" /> 
  
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>
    
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  
  <node pkg="rosserial_python" type="serial_node.py" name="serial_node">
    <param name="port" value="/dev/ttyACM0"/>
    <param name="baud" value="57600"/>
  </node>
  
  <!-- Launch MPU6050 node -->
  
  <node name="mpu_node" pkg="mpu6050_driver" type="mpu6050_node" output="screen">
    <rosparam file="$(find mpu6050_driver)/config/mpu_settings.yaml" command="load"/>
  </node>

  <!-- Launch IMU filter node -->
  <node name="imu_filter_node" pkg="imu_filter_madgwick" type="imu_filter_node" output="screen">
    <rosparam file="$(find mpu6050_driver)/config/madgwick_filter_params.yaml" command="load"/>
    <remap from="imu/data" to="imu/data_filtered"/>
  </node>

  <!-- Subscribe: /initialpose, /move_base_simple/goal -->
  <!-- Publish: /initial_2d, /goal_2d -->
  
  <node pkg="localization_data_pub" type="rviz_click_to_2d" name="rviz_click_to_2d">
  </node>
  
  <!-- Wheel Odometry Publisher -->
  <!-- Subscribe: /right_ticks, /left_ticks, /initial_2d -->
  <!-- Publish: /odom_data_euler, /odom_data_quat -->
  
  <node pkg="localization_data_pub" type="ekf_odom_pub" name="ekf_odom_pub">
  </node> 
  
  <!-- Lidar Data Publisher Using RPLIDAR from Slamtec -->
  <!-- Used for obstacle avoidance and can be used for mapping -->
  <!-- Publish: /scan -->
  
  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
    <param name="serial_port"         type="string" value="/dev/ttyUSB0"/>
    <param name="serial_baudrate"     type="int"    value="115200"/><!--A1/A2 -->
    <!--param name="serial_baudrate"  type="int"    value="256000"--><!--A3 -->
    <param name="frame_id"            type="string" value="laser"/>
    <param name="inverted"            type="bool"   value="false"/>
    <param name="angle_compensate"    type="bool"   value="true"/>
  </node>  

<!-- Start the gmapping node -->

  <node name="slam_gmapping" pkg="gmapping" type="slam_gmapping" output="screen">
    <param name="base_frame" value="base_link" />
    <param name="odom_frame" value="odom" />
    <param name="map_frame" value="map" />
    <param name="scan_topic" value="/scan" />
  </node>

  <!-- Extended Kalman Filter from robot_pose_ekf Node-->
  <!-- Subscribe: /odom, /imu_data, /vo -->
  <!-- Publish: /robot_pose_ekf/odom_combined -->
  
  <remap from="odom" to="odom_data_quat" />
  <remap from="imu_data" to="/imu/data_filtered" />
  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
    <param name="output_frame" value="odom"/>
    <param name="base_footprint_frame" value="base_link"/>
    <param name="freq" value="30.0"/>
    <param name="sensor_timeout" value="1.0"/>
    <param name="odom_used" value="true"/>
    <param name="imu_used" value="true"/>
    <param name="vo_used" value="false"/>
    <param name="gps_used" value="false"/>
    <param name="debug" value="false"/>
    <param name="self_diagnose" value="false"/>
  </node>
 
 
  <!-- Rviz -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find main_package)/config.rviz">
  </node>
   
</launch>
